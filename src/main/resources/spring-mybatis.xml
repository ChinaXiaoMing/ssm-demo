<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- 加载配置文件 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:jdbc.properties</value>
        <value>classpath:log4j.properties</value>
      </list>
    </property>
  </bean>
  <!-- druid连接池 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 初始化连接数 -->
    <property name="initialSize" value="${jdbc.initialSize}"/>
    <!-- 最小空闲连接数 -->
    <property name="minIdle" value="${jdbc.minIdle}"/>
    <!-- 最大连接数 -->
    <property name="maxActive" value="${jdbc.maxActive}"/>
    <!-- 连接超时时间，单位是毫秒 -->
    <property name="maxWait" value="60000" />
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />
    <!-- 用来检测连接是否有效的sql，要求是一个查询语句。
    如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
   -->
    <property name="validationQuery" value="SELECT 1 FROM USERS" />
    <!-- 不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
    <property name="testWhileIdle" value="true" />
    <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
    <property name="testOnBorrow" value="false" />
    <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
    <property name="testOnReturn" value="false" />
    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
    <property name="filters" value="stat" />
    <!-- druid.stat.mergeSql=true 合并执行的相同sql，避免因为参数不同而统计多条sql语句
         druid.stat.slowSqlMillis=10000 用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢 -->
    <property name="connectionProperties" value="druid.stat.mergeSql=true;druid.stat.slowSqlMillis=10000"/>
  </bean>

  <!-- spring mybatis整合 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="mapperLocations" value="classpath:mappers/*.xml"/>
  </bean>
  <!-- DAO接口所在包名，Spring会自动查找其下的类，不然@Autowired自动注入报错 -->
  <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.nexwise.dao"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>

  <!-- 事务管理器 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
</beans>